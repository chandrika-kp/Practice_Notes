React is a framework for building client-side dynamic web applications.
React uses dynamic data binding and a virtual DOM to extend HTML syntax
React component names must always start with a capital letter, while HTML tags must be lowercase.
In React, some of HTML elements will be rendered as a React component.
React uses a special markup language called JavaScript XML (JSX) which resembles HTML.
JSK
-------------
JSX can be compiled and interpreted as JavaScript by Babel, a special in-memory tool.
JSX is embedded inside special script tags where the type attribute specifies the content that requires Babel.
Packages
------------
Three important packages that you use to build React applications .
1)React package : The React package holds the React source for components and their states and properties. 
2)ReactDOM package : The ReactDOM package is the glue between React and the DOM.
3)Babel package : Babel is the module which is available in most modern browsers.
                   It is used to compile and interpret the JSX.
Create React App
--------------------
With Create React App, you can easily create a React application.
1)First we have to install node
2)In comand Prompt/powershell /terminal , npx create-react-app app_Name 
   - It creates react application with some packages & Folders
   - In src folder : App.js   ---contains App , which is the root react component that you add into your Html page
                   : Index.js --- is where you add the App component to the html
3)To run React App -----npm start

NOTES:
--------------
React is an efficient, flexible JavaScript library for building user interfaces. 
React uses a special markup language called JSX. 
A React application is a tree of components and an extension of the HTML DOM.
With Create React App, you can easily create a React application.

we can export components two ways 
1) Default export 
-----> export default ComponentName
we came import above file with any name 
like import anyName from './file Path'

2) Named Export
------> export {ComponentName}
we came import above file within curlyBraces {} with same name 
like import {ComponentName} from './file Path' 

------------------>
In a real-time application ,components must deal with dynamic data
Data could be someting internal to the component or may be passed from another component.
To bind the data to the component ,you need two Js objects
1) Props
2)State


Props
----------------------------
React Props are like function arguments in JavaScript and attributes in HTML.
props stands for properties.
props are read only
It allows us to pass data from one component to another component
props are immutable--when parent component update the data that is passed as props then
                     the child component get updated props
props are passed as arguments to function components and accessed within components

steps---->
1) ACCESSING DATA ---- In parent component , this would be accessed as   ( props.property )  // dont forget to pass props as an argument to the function/class component
2) PASSING DATA   ---- we are passing props as a ( property = value ) to child component.


State
-----------------------------
The state is an initial value set for a component, which is used for interactivity.
The state is the set of data that is managed by the component.

Hooks
-------
useState

It cannot reload the page whenever we update data

-----------------------------------------------------------------------------------------------
Angular               	Angular is a platform for building mobile and desktop web applications.
App.js	                Contains App, which is the root React component that you will add into your HTML page.
Arrow functions	        Allow you to declare functions the same way you declare variables
Babel                  	A special in-memory tool that compiles JSX and interprets it as JavaScript.
Class	                  A template or blueprint for creating objects.
Class component	        Use JavaScript ES6 classes to create class-based components in React.
Component              	Core building blocks of React.
const	                  Allows you to declare constants whose values cannot be changed.
CSS	                    Cascading style sheets.
Create React App	      Simplifies the process of creating React applications.
DOM	                    Document object model.
ES	                    ES is short for ECMAScript, which is a standards organization that creates a wide range of global information and communications technology standards.
ES6	                    JavaScript adheres to ECMA's specification EcmaScript6.
ECMAScript            	A standard used for client-side scripting.
event	                  Enable the component to manage document object model (DOM) actions as a result of user interaction on the system.
Front-end frameworks	  Are used to create a dynamic client that can connect to the server.
Functional component	  Created by writing a JavaScript function.
High-order component	  Are used to share logic with other components
HTML	                  Hypertext markup language.
index.js	              Where you will add App to the HTML.
JSX	                    JavaScript XML which resembles HTML.
let	                    Allows you to restrict the scope of variables within the block where they were declared.
Local scope           	Is the limited scope.
Promise	                Represents the eventual completion of an asynchronous operation and its return value.
Props	                  Used to pass data from a parent component to a child component.
Pure component	        Do not depend on or modify the state of variables. Outside their scope
ReactDOM package	      This is the glue between React and the DOM.
React package	          Holds the React source for components and their states and properties.
React elements        	Used to render the component to DOM.
src folder	            The main folder in which you will make changes.
state	                  An object that describes how the component will behave and render currently.
subclass	              The class that is inheriting one other class.
superclass	            The class being inherited by the subclass.
this	                  Keyword that refers to the current object.
